/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uniza.diss.one.app;

import static com.sun.corba.se.impl.util.Utility.printStackTrace;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import uniza.diss.one.impl.MonteCarloFirstStrategy;
import uniza.diss.one.impl.MonteCarloSecondStrategy;
import uniza.diss.one.utils.AppOutput;

/**
 * Hlavne GUI aplikacie
 *
 * @author mariokemen
 */
public class App extends javax.swing.JFrame {

    private XYSeriesCollection dataset;
    private int countReplications;
    private int countDoors;

    private XYSeries series1;
    private XYSeries series2;

    private Thread simulationThread1;
    private Thread simulationThread2;

    /**
     * Creates new form App
     */
    public App() {
        initComponents();
        setLocationRelativeTo(null); // centrovanie okna
        
        
        AppOutput.setApp(this);
        this.dataset = new XYSeriesCollection();
        createChart();
    }

    /**
     * Vytvorenie zakladnej komponenty grafu
     *
     * @return JFreeChart graf
     */
    private void createChart() {

        JFreeChart chart = ChartFactory.createXYLineChart("Štatistika výhier", "Počet replikácií", "Pravdepodobnosť výhry", this.dataset,
                PlotOrientation.VERTICAL, true, true, false);
        
        final NumberAxis yAxis = new NumberAxis();
        yAxis.setAutoRangeIncludesZero(false); // nefixovat na nulu
        yAxis.setAutoRange(true); // auto scale osi Y
        yAxis.setAttributedLabel("Pravdepodobnosť výhry");

        XYPlot plot = (XYPlot) chart.getPlot();
        plot.setRangeAxis(yAxis); // nastavit os Y
        plot.getDomainAxis().setStandardTickUnits(NumberAxis.createIntegerTickUnits()); // nastavit jednotky osi X

        XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) plot.getRenderer();
        renderer.setSeriesShapesVisible(0, false); // Pri zmene hodnoty mi urob stvorcek
        
        mainChartPanel.removeAll();
        mainChartPanel.add(new ChartPanel(chart));
        mainChartPanel.revalidate();
    }

    /**
     * Iniciuje XY seriu pre prvu strategiu
     *
     * @return
     */
    private XYSeries createSeries1() {
        this.series1 = new XYSeries("Prvá stratégia");
        return series1;
    }

    /**
     * Iniciuje XY seriu pre druhu strategiu
     *
     * @return
     */
    private XYSeries createSeries2() {
        series2 = new XYSeries("Druhá stratégia");
        return series2;
    }

    /**
     * Praca zo vstupmi, nacitanie hodnot do simulacie
     */
    private void setInputValues() {
        jTextFieldValueStrategy1.setText("");
        jTextFieldValueStrategy2.setText("");
        try {
            this.countReplications = Integer.parseInt(jTextFieldCountReplications.getText());
            this.countDoors = Integer.parseInt(jTextFieldCountDoors.getText());
        } catch (NumberFormatException nfe) {
            System.out.println("Chyba na vstupe");
        }
        jButtonStop.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainChartPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCountReplications = new javax.swing.JTextField();
        jTextFieldCountDoors = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JButtonStrategy1 = new javax.swing.JButton();
        jButtonStrategy2 = new javax.swing.JButton();
        jButtonAllStrategies = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldValueStrategy1 = new javax.swing.JTextField();
        jTextFieldValueStrategy2 = new javax.swing.JTextField();
        jButtonStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Televízna relácia");
        setPreferredSize(new java.awt.Dimension(1200, 600));

        mainChartPanel.setBackground(new java.awt.Color(102, 102, 102));
        mainChartPanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Počet replikácií");

        jTextFieldCountReplications.setText("1000000");
        jTextFieldCountReplications.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCountReplicationsActionPerformed(evt);
            }
        });

        jTextFieldCountDoors.setText("3");

        jLabel2.setText("Počet dverí");

        JButtonStrategy1.setText("Štart stratégie 1");
        JButtonStrategy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonStrategy1ActionPerformed(evt);
            }
        });

        jButtonStrategy2.setText("Štart stratégie 2");
        jButtonStrategy2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStrategy2ActionPerformed(evt);
            }
        });

        jButtonAllStrategies.setText("Štart oboch stratégií");
        jButtonAllStrategies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAllStrategiesActionPerformed(evt);
            }
        });

        jLabel3.setText("Hodnoty stratégie 1");

        jLabel4.setText("Hodnoty stratégie 2");

        jTextFieldValueStrategy1.setEditable(false);

        jTextFieldValueStrategy2.setEditable(false);

        jButtonStop.setText("Stop");
        jButtonStop.setEnabled(false);
        jButtonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1081, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldCountDoors)
                            .addComponent(jTextFieldCountReplications, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(JButtonStrategy1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonStrategy2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAllStrategies)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldValueStrategy2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldValueStrategy1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCountReplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldValueStrategy1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JButtonStrategy1)
                    .addComponent(jButtonStrategy2)
                    .addComponent(jButtonAllStrategies))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldCountDoors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jButtonStop))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTextFieldValueStrategy2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCountReplicationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCountReplicationsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCountReplicationsActionPerformed

    /**
     * Tlacidlo pre spustenie simulacie so strategiou 1
     *
     * @param evt
     */
    private void JButtonStrategy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonStrategy1ActionPerformed

        setInputValues();

        this.dataset.removeAllSeries();
        this.dataset.addSeries(createSeries1());

        this.simulationThread1 = new RunStrategy1();
        this.simulationThread1.start();

    }//GEN-LAST:event_JButtonStrategy1ActionPerformed

    /**
     * Prida hodnotu replikacie strategie 1 do grafu
     *
     * @param x
     * @param y
     */
    public void addReplicaStrategy1(int x, double y) {
        if (isStrategy1Alive()) {
            try {
                series1.add(x, y);
                jTextFieldValueStrategy1.setText("" + y);
            } catch (Exception e) {
                printStackTrace();
            }
        }
    }

    /**
     * Prida hodnotu replikacie strategie 1 do grafu
     *
     * @param x
     * @param y
     */
    public void addReplicaStrategy2(double x, double y) {
        if (isStrategy2Alive()) {
            try {
                series2.add(x, y);
                jTextFieldValueStrategy2.setText("" + y);
            } catch (Exception e) {
                printStackTrace();
            }
        }
    }

    /**
     * Trieda, v ktorej sa spusti nove vlakno so simulaciou strategie 1
     */
    private class RunStrategy1 extends Thread {

        @Override
        public void run() {
            MonteCarloFirstStrategy strategy1 = new MonteCarloFirstStrategy();
            strategy1.runMonteCarlo(countReplications, countDoors);
        }

    }

    /**
     * Trieda, v ktorej sa spusti nove vlakno so simulaciou strategie 2
     */
    private class RunStrategy2 extends Thread {

        @Override
        public void run() {
            MonteCarloSecondStrategy strategy2 = new MonteCarloSecondStrategy();
            strategy2.runMonteCarlo(countReplications, countDoors);
        }

    }

    /**
     * Tlacidlo pre spustenie simulacie so strategiou 2
     *
     * @param evt
     */
    private void jButtonStrategy2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStrategy2ActionPerformed

        setInputValues();

        this.dataset.removeAllSeries();
        this.dataset.addSeries(createSeries2());

        this.simulationThread2 = new RunStrategy2();
        this.simulationThread2.start();

    }//GEN-LAST:event_jButtonStrategy2ActionPerformed

    private void jButtonAllStrategiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAllStrategiesActionPerformed

        setInputValues();

        // Naplnenie datasetu dvoch hodnot
        this.dataset.removeAllSeries();
        this.dataset.addSeries(createSeries1());
        this.dataset.addSeries(createSeries2());

        // Spustenie vlakien
        this.simulationThread1 = new RunStrategy1();
        this.simulationThread1.start();

        this.simulationThread2 = new RunStrategy2();
        this.simulationThread2.start();

    }//GEN-LAST:event_jButtonAllStrategiesActionPerformed

    private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopActionPerformed

        if (isStrategy1Alive()) {
            simulationThread1.stop();
        }

        if (isStrategy2Alive()) {
            simulationThread2.stop();
        }

    }//GEN-LAST:event_jButtonStopActionPerformed

    private boolean isStrategy1Alive() {
        return simulationThread1 != null && simulationThread1.isAlive();
    }

    private boolean isStrategy2Alive() {
        return simulationThread2 != null && simulationThread2.isAlive();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButtonStrategy1;
    private javax.swing.JButton jButtonAllStrategies;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JButton jButtonStrategy2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextFieldCountDoors;
    private javax.swing.JTextField jTextFieldCountReplications;
    private javax.swing.JTextField jTextFieldValueStrategy1;
    private javax.swing.JTextField jTextFieldValueStrategy2;
    private javax.swing.JPanel mainChartPanel;
    // End of variables declaration//GEN-END:variables
}
